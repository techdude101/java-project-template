/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.3/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'java'
    id 'checkstyle'
    id 'jacoco'
    id 'org.barfuin.gradle.jacocolog' version '3.1.0'
}

ext {
    junitVersion = '5.10.2'
    checkstyleVersion = '10.16.0'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: "${junitVersion}"
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-params', version: "${junitVersion}"
    testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: "${junitVersion}"

    implementation 'com.google.guava:guava:32.1.1-jre'

    implementation group: 'com.puppycrawl.tools', name: 'checkstyle', version: "${checkstyleVersion}"

}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'com.techdude101.java.template.App'
}

javadoc {
    destinationDir = file("${buildDir}/docs/javadoc")
}

apply plugin: 'checkstyle'
checkstyle {
    toolVersion "${checkstyleVersion}"
    configFile file("config/checkstyle/checkstyle.xml")
}

jacoco {
    toolVersion = "0.8.11"
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = true
        csv.required = true
    }
}